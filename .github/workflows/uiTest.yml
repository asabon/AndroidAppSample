name: uiTest

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'todo.md'
      - 'docs/**'

  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'todo.md'
      - 'docs/**'

  workflow_dispatch:

jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "ANDROID_HOME=${{ github.workspace }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=${{ github.workspace }}/.avd" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${{ github.workspace }}/android-sdk" >> $GITHUB_ENV
          echo "PATH=${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ github.workspace }}/android-sdk/emulator:$PATH" >> $GITHUB_ENV


      - name: Echo environment variables
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME"
          echo "PATH=$PATH"

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles(
            'gradle.properties',
            '**/gradle-wrapper.properties',
            '**/*.gradle.kts',
            '**/libs.versions.toml'
            ) }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Output dependencies
        run: ./gradlew dependencies

      - name: Install yes command
        run: sudo apt-get update && sudo apt-get install -y coreutils

      - name: Install unzip
        run: sudo apt-get install -y unzip

      - name: Install Android SDK cmdline-tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -O https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip commandlinetools-linux-*.zip
          mv cmdline-tools latest

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: Install system image
        run: sdkmanager "system-images;android-30;google_apis;arm64-v8a"

      - name: Install emulator
        run: sdkmanager "emulator"

      - name: Prepare AVD directory
        run: mkdir -p ${{ github.workspace }}/.avd

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;arm64-v8a"
          emulator -avd test -no-window -no-audio -gpu swiftshader -no-snapshot-save &

      - name: Wait for emulator to boot completely
        run: |
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            sleep 5
          done

      - name: Test with Gradle
        run: ./gradlew connectedDebugAndroidTest --no-daemon
        continue-on-error: false

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ui-test-report
          path: app/build/reports/androidTests
